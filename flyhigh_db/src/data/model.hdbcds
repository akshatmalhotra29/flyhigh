context model {
    type UUID : String(36); // Generated through app
    type Currency : String(3);
    type Amount : Decimal(15, 2);
    type IATA : String(3);
    type Email : String(30);
    type Gate : String(3);
    type FlightOperator : String(2);
    type FlightNumber : Integer;
    type SKU : String(30);

    entity Role {
        key email : Email;
        key scope : String(20);
    };

    entity Customer {
        key id           : UUID  not null;
            email        : Email not null;
            prefCurrency : Currency null;
            passport     : String(10) null;
    };

    entity Vendor {
        key id       : UUID                                  not null;
            email    : Email                                 not null;
            location : association[1, 1] to Airport { iata } not null;
    };

    entity Catalog {
        key id          : UUID                               not null;
            model       : SKU                                not null;
            category    : SKU;
            vendor      : association[1, 1] to Vendor { id } not null;
            retailPrice : Amount                             not null;
            description : String(200);
    };

    entity FlightItinerary {
        customer : association[1, 1] to Customer { id } not null;
        flight   : association[1, 1] to Flight { id }   not null;
    };

    entity Discount {
        key id                 : UUID        not null;
            item               : association[1, 1] to Catalog { id };
            startdate          : UTCDateTime not null;
            enddate            : UTCDateTime not null;
            discountpercentage : BinaryFloat default 0;
            discountabsolute   : Amount      default 0;
            customerSpecific   : association[1, 1] to Customer { id };
    }

    // Master Data Tables
    entity Airport {
        key iata          : IATA        not null;
            name          : String(100) not null;
            localcurrency : Currency    not null;
    };

    entity CurrencyConversion {
        key fromcurrency : Currency    not null;
        key tocurrency   : Currency    not null;
            factor       : BinaryFloat not null;
    };

    entity FlightMaster {
        key operator    : FlightOperator not null;
        key flightnum   : FlightNumber   not null;
        key origin      : IATA           not null;
        key destination : IATA           not null;
        key deptime     : String(8)      not null;
            arrtime     : String(8)      not null;
            daydiff     : Integer        not null;
    };

    entity Flight {
        key id          : UUID                                  not null;
            operator    : FlightOperator                        not null;
            flightnum   : FlightNumber                          not null;
            origin      : association[1, 1] to Airport { iata } not null;
            destination : association[1, 1] to Airport { iata } not null;
            depdatetime : UTCDateTime                           not null;
            arrdatetime : UTCDateTime                           not null;
            depgate     : Gate;
            arrgate     : Gate;
    };

    view CatalogDiscount as
        select from     Catalog as C
        left outer join Discount as D on
            C."id" = D."item"."id"
        {
            C.id                             as catalogid,
            C.model,
            C.category,
            C.vendor.id                      as vendorid,
            C.vendor.location.iata,
            C.vendor.location.localcurrency,
            C.retailPrice,
            C.description,
            D.id                             as discountid,
            D.startdate,
            D.enddate,
            D.discountpercentage,
            D.discountabsolute,
            D.customerSpecific.id            as customerid
        };

    view PassengerList as
        select from FlightItinerary
        {
            customer.id             as customerid,
            flight.id               as flightid,
            flight.operator,
            flight.flightnum,
            flight.origin.iata      as origin,
            flight.destination.iata as destination,
            flight.depdatetime,
            flight.arrdatetime,
            flight.depgate,
            flight.arrgate
        };

    view PassengerListAgg as
        select from PassengerList
        {
            flightid,
            count(customerid) as pax
        }
        group by
            flightid;

    view PassengerListWithAgg as
        select from PassengerListAgg as P
        left join   FlightItinerary as F  on
            P.flightid = F.flight.id
        {
            F.flight.id               as flightid,
            F.flight.operator,
            F.flight.flightnum,
            F.flight.origin.iata      as origin,
            F.flight.destination.iata as destination,
            F.flight.depdatetime,
            F.flight.arrdatetime,
            P.pax
        };
};